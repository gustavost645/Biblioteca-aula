/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tela.circulacao;

import dao.EmprestimoDAO;
import dao.LeitorDAO;
import dao.LivroDAO;
import entidade.Autor;
import entidade.Emprestimo;
import entidade.Leitor;
import entidade.Livro;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tela.leitor.ListLeitor;
import tela.livro.ListLivro;
import util.BibliotecaUtil;
import util.LoggerUtil;

/**
 *
 * @author Gustavo.Steinhoefel
 */
public class IfrCadEmprestimo extends javax.swing.JInternalFrame {

    private Integer limiteLivros;
    private int linha;
    private Leitor arq = null;
    private Emprestimo emps = null;
    private final EmprestimoDAO daoEmp = new EmprestimoDAO();
    private final IfrCadEmprestimo tela;

    /**
     * Creates new form IfrCadEmprestimo
     */
    public IfrCadEmprestimo() {
        tela = this;
        initComponents();
        emps = new Emprestimo();
        this.setTitle("Empréstimo de Livros");

        txtDataDev.setDate(DiasDevolucao());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCodMembro = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txtNomeMembro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodLivro = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        txtTituloLivro = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDataDev = new com.toedter.calendar.JDateChooser();
        addBook = new javax.swing.JButton();
        delBook = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Código do Leitor:");

        txtCodMembro.setMinimumSize(new java.awt.Dimension(14, 23));
        txtCodMembro.setPreferredSize(new java.awt.Dimension(14, 32));
        txtCodMembro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodMembroFocusLost(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/1480357371_free-01.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtNomeMembro.setEditable(false);
        txtNomeMembro.setFocusable(false);
        txtNomeMembro.setPreferredSize(new java.awt.Dimension(14, 23));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Código do Livro:");

        txtCodLivro.setMinimumSize(new java.awt.Dimension(14, 23));
        txtCodLivro.setPreferredSize(new java.awt.Dimension(14, 32));
        txtCodLivro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodLivroFocusLost(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/1480357371_free-01.png"))); // NOI18N
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtTituloLivro.setEditable(false);
        txtTituloLivro.setFocusable(false);
        txtTituloLivro.setPreferredSize(new java.awt.Dimension(14, 23));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Dt. Devolução:");

        addBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/1480357539_free-05.png"))); // NOI18N
        addBook.setToolTipText("Adiconar Livro");
        addBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookActionPerformed(evt);
            }
        });

        delBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/1480357360_free-09.png"))); // NOI18N
        delBook.setToolTipText("Remover Livro");
        delBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBookActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Devolução", "Código", "Descrição Livro", "Autor", "Editora", "Edição"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(65);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(500);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(350);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(300);
        }

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/1480357534_free-05.png"))); // NOI18N
        jButton6.setText("Emprestar");
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/1479862814_Cancel.png"))); // NOI18N
        jButton5.setText("Fechar");
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDataDev, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCodLivro, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addComponent(txtCodMembro, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNomeMembro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTituloLivro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(609, 609, 609)
                                .addComponent(addBook, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(delBook, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCodLivro, txtCodMembro, txtDataDev});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtNomeMembro, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(txtCodMembro, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDataDev, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTituloLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addBook)
                            .addComponent(delBook))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCodLivro, txtCodMembro, txtDataDev});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodMembroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodMembroFocusLost
        try {
            if (!txtCodMembro.getText().trim().isEmpty()) {
                Leitor arq = new LeitorDAO().consultarId(Integer.parseInt(txtCodMembro.getText().trim()));
                if (arq != null) {
                    if (arq.verificaLivrosPendentes()) {
                        txtCodMembro.setText(String.valueOf(arq.getId()));
                        txtNomeMembro.setText(arq.getNome());
                        limiteLivros = arq.getLimite_livros();
                    } else {
                        String[] opcoes = {"Sim", "Não"};
                        int opcao = JOptionPane.showOptionDialog(null, "Foram encontrados livros pendentes de devolução para este Leitor\nDeseja prosseguir com o empréstimo?",
                                "Aviso", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,
                                null, opcoes, opcoes[0]);
                        if (opcao == JOptionPane.OK_OPTION) {
                            txtCodMembro.setText(String.valueOf(arq.getId()));
                            txtNomeMembro.setText(arq.getNome());
                            limiteLivros = arq.getLimite_livros();
                        } else {
                            limpaCamposMembro();
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Não foi possível localizar o leitor por este código!", "Aviso", JOptionPane.WARNING_MESSAGE);
                    limpaCamposMembro();
                }
            }
        } catch (HeadlessException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
            LoggerUtil.log(IfrCadEmprestimo.class, ex.getMessage());
        }
    }//GEN-LAST:event_txtCodMembroFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ListLeitor lm = new ListLeitor(null, true, this);
        lm.setVisible(true);
        txtCodLivro.requestFocusInWindow();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtCodLivroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodLivroFocusLost
        try {
            if (!txtCodLivro.getText().trim().isEmpty()) {

                Livro livro = new LivroDAO().consultarId(Integer.parseInt(txtCodLivro.getText().trim()));
                if (livro != null) {
                    txtCodLivro.setText(String.valueOf(livro.getId()));
                    txtTituloLivro.setText(livro.getTitulo());
                } else {
                    JOptionPane.showMessageDialog(null, "Não foi possível localizar o livro por este código!", "Aviso", JOptionPane.WARNING_MESSAGE);
                    limpaCamposLivro();
                }
            }
        } catch (HeadlessException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
            LoggerUtil.log(IfrCadEmprestimo.class, ex.getMessage());
        }
    }//GEN-LAST:event_txtCodLivroFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        ListLivro lp = new ListLivro(null, true, this);
        lp.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void addBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookActionPerformed
        try {
            if (!txtCodLivro.getText().trim().isEmpty() && !txtTituloLivro.getText().trim().isEmpty()) {
                ArrayList<Livro> li = new LivroDAO().listarbyId(txtCodLivro.getText().trim());

                for (Livro l : li) {
                    if (l.getStatus() == 0) {
                        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                        dtm.addRow(new Object[]{
                            new SimpleDateFormat("dd/MM/yyyy").format(txtDataDev.getDate()),
                            txtCodLivro.getText(),
                            txtTituloLivro.getText(),
                            mostraAutores(l.getAutor()),
                            l.getEditora().getDescricao(),
                            l.getEdicao(),});
                        txtCodLivro.setText("");
                        txtTituloLivro.setText("");
                        txtCodLivro.requestFocusInWindow();
                    } else {
                        JOptionPane.showMessageDialog(null, "Este Livro já se encontra locado ou não esta disponível para empréstimo", "Aviso", JOptionPane.INFORMATION_MESSAGE);
                        limpaCamposLivro();
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Primeiro selecione um livro!", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
            LoggerUtil.log(IfrCadEmprestimo.class, ex.getMessage());
        }
    }//GEN-LAST:event_addBookActionPerformed

    private void delBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBookActionPerformed
        if (jTable1.getRowCount() > 0) {
            removeItem();
        }
    }//GEN-LAST:event_delBookActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        linha = this.jTable1.getSelectedRow();
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if ((!txtCodMembro.getText().trim().isEmpty()) && (jTable1.getRowCount() != 0)) {
            salvar();
        } else {
            JOptionPane.showMessageDialog(null, "Favor preencher todos os dados antes de salvar!", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBook;
    private javax.swing.JButton delBook;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCodLivro;
    private javax.swing.JTextField txtCodMembro;
    private com.toedter.calendar.JDateChooser txtDataDev;
    private javax.swing.JTextField txtNomeMembro;
    private javax.swing.JTextField txtTituloLivro;
    // End of variables declaration//GEN-END:variables

    public void setMembro(Leitor leitor) {

        txtCodMembro.setText(String.valueOf(leitor.getId()));
        txtNomeMembro.setText(leitor.getNome());
    }

    public void setBook(Livro livro) {
        txtCodLivro.setText(String.valueOf(livro.getCodbarras()));
        txtTituloLivro.setText(livro.getTitulo());
    }

    private Date DiasDevolucao() {
        Calendar c = Calendar.getInstance();
        c.setTime(new Date());
        c.add(Calendar.DATE, 7);

        if (c.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY) {
            c.add(Calendar.DATE, 1);
        } else if (c.get(Calendar.DAY_OF_WEEK) == Calendar.SATURDAY) {
            c.add(Calendar.DATE, 2);
        }
        return c.getTime();
    }

    private void salvar() {
        try {
            for (int i = 0; i < jTable1.getRowCount(); i++) {

                emps.setDataemprestimo(Calendar.getInstance().getTime());
                emps.setDatavencimento(BibliotecaUtil.stod(jTable1.getValueAt(i, 0).toString()));
                emps.setId_livro(Integer.parseInt(jTable1.getValueAt(i, 1).toString()));
                emps.setId_leitor(Integer.parseInt(txtCodMembro.getText().trim()));
                daoEmp.salvar(emps);

            }
            JOptionPane.showMessageDialog(null, "Empréstimo Realizado com Sucesso!", "", JOptionPane.INFORMATION_MESSAGE);
            limparTodosCampos();
        } catch (HeadlessException | NumberFormatException | ParseException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage(), "ERRO", JOptionPane.ERROR_MESSAGE);
            LoggerUtil.log(IfrCadEmprestimo.class, ex.getMessage());
        }

    }

    private void limparTodosCampos() {
        txtCodMembro.setText("");
        txtNomeMembro.setText("");
        DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
        for (int a1 = m.getRowCount(); a1 > 0; --a1) {
            m.removeRow(a1 - 1);
        }
        txtCodMembro.requestFocusInWindow();
    }

    private void limpaCamposLivro() {
        txtCodLivro.setText("");
        txtTituloLivro.setText("");
        txtCodLivro.requestFocusInWindow();
    }

    private void removeItem() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.removeRow(linha);
    }

    private void limpaCamposMembro() {
        txtCodMembro.setText("");
        txtNomeMembro.setText("");
        txtCodMembro.requestFocusInWindow();
    }

    private String mostraAutores(List<Autor> autores) {
        String ret = "";
        for (int i = 0; i < autores.size(); i++) {
            ret += autores.get(i).getNome() + ",";
        }
        return ret.substring(0, ret.length() - 1);
    }

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void setLeitor(Leitor membro) {
        txtCodMembro.setText(String.valueOf(membro.getId()));
        txtNomeMembro.setText(membro.getNome());

    }

    public void setLivro(Livro livro) {
        txtCodLivro.setText(String.valueOf(livro.getId()));
        txtTituloLivro.setText(livro.getTitulo());
    }
}
